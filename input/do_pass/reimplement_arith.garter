def add(x: Int, y: Int) -> Int:
    if y ==<Int> 0:
        x
    else: 
        if y > 0:
            add(add1(x), sub1(y))
        else:
            add(sub1(x), add1(y))

def flip(x: Int) -> Int: x * -1

def mul(x: Int, y: Int) -> Int:
    if y ==<Int> 1:
        x
    else: if y > 1:
        add(x, mul(x, sub1(y)))
    else: if y ==<Int> 0:
        0
    else:
        flip(mul(x, flip(y)))

def sub(x: Int, y: Int) -> Int:
    add(x, flip(y))

let 
    # 8
    a:Int=print<Int>(add(3,5)), 
    # -8:
    b:Int=print<Int>(add(-3, -5)), 
    # 15
    c:Int=print<Int>(mul(5,3)), 
    # 0
    d:Int=print<Int>(mul(5,0)),
    # -15
    e:Int=print<Int>(mul(5,-3)),
    # -15
    f:Int=print<Int>(mul(-5,3)),
    # 5
    g:Int=print<Int>(sub(8,3)),
    # -3
    h:Int=print<Int>(sub(8, 11)) in 
a+b: Int 